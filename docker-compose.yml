version: "3.9"

services:

  postgres:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGPORT: ${DB_PORT}
    container_name: sport_shop_postgres
    restart: "on-failure"

  api:
    build: .
    entrypoint: sh_files/api.sh
    depends_on:
      - postgres
      - redis
    env_file:
      - .env
    container_name: sport_shop_api
    restart: "on-failure"

  nginx:
    depends_on:
      - api
    build: nginx
    ports:
      - 1300:80
    volumes:
      - media_volume:/sportShop/media
    container_name: sport_shop_nginx
    restart: "on-failure"

  redis:
    image: redis
    container_name: sport_shop_redis

  celery:
    build: .
    command: celery -A sportShop worker -l info
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/sportShop
    container_name: sport_shop_celery
    restart: "on-failure"

  celery-beat:
    build: .
    command: celery -A sportShop beat -l info
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/sportShop
    container_name: sport_shop_celery_beat
    restart: "on-failure"

volumes:
  postgres_data:
  media_volume:
