version: "3.9"

services:

  postgres:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    user: ${POSTGRES_USER}
    environment:
      POSTGRES_DB: sportshop_postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mohsen1160417237
      PGPORT: 5432
    env_file:
      - env/main.env
    ports:
      - 5432:5432
    container_name: sport_shop_postgres
    restart: always

  api:
    build: ..
    entrypoint: /api.sh
    depends_on:
      - postgres
      - redis
    env_file:
      - env/main.env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - sport_shop_volume:/sportShop
      - media_volume:/sportShop/media
    container_name: sport_shop_api
    restart: always

  nginx:
    depends_on:
      - api
    build: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - media_volume:/sportShop/media
      - nginx_log_volume:/var/log/nginx
      - nginx_conf:/etc/nginx/conf.d
      #- ./certbot/conf:/etc/letsencrypt
     # - ./certbot/www:/var/www/certbot
    container_name: sport_shop_nginx
    restart: always

  certbot:
    image: certbot/certbot
    container_name: sport_shop_certbot
    env_file:
      - env/certbot.env
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf:/etc/letsencrypt
    command: certonly --webroot -w /var/www/certbot --force-renewal --email ${EMAIL} -d ${DOMAIN} --agree-tos

  redis:
    build: redis
    volumes:
      - redis_volume:/data
    ports:
      - 6379:6379
    container_name: sport_shop_redis
    restart: always

  celery:
    build: .
    entrypoint: /celery.sh
    depends_on:
      - postgres
      - redis
    volumes:
      - sport_shop_volume:/sportShop
    env_file:
      - env/main.env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    user: sport_shop_user:sport_shop_group
    container_name: sport_shop_celery
    restart: always

  celery-beat:
    build: .
    entrypoint: /celery-beat.sh
    depends_on:
      - postgres
      - redis
    volumes:
      - sport_shop_volume:/sportShop
    env_file:
      - env/main.env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    user: sport_shop_user:sport_shop_group
    container_name: sport_shop_celery_beat
    restart: always

volumes:
  postgres_data:
  media_volume:
  sport_shop_volume:
  redis_volume:
  nginx_log_volume:
  nginx_conf:
