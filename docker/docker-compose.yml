version: "3.9"

services:

  open_vpn_client_api:

    image: ghcr.io/wfg/openvpn-client
    container_name: openvpn-client-api
    cap_add:
      - NET_ADMIN
    ports:
      - 8181:8181
    devices:
      - /dev/net/tun
    volumes:
      - ./vpn:/data/vpn
    networks:
      - open_vpn_network_api
    restart: unless-stopped

  postgres:

    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    user: ${POSTGRES_USER}
    environment:
      POSTGRES_DB: sportshop_postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mohsen1160417237
      PGPORT: 5432
    env_file:
      - env/main.env
    ports:
      - 5432:5432
    container_name: sport_shop_postgres
    restart: always

  api:

    build: ..
    entrypoint: /api.sh
    depends_on:
      - postgres
      - rabbitmq
    env_file:
      - env/main.env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - sport_shop_volume:/sportShop
    container_name: sport_shop_api
    restart: always

  nginx:

    depends_on:
      - api
    image: nginx
    volumes:
      - sport_shop_volume:/sportShop
      - nginx_log_volume:/var/log/nginx
      - ./nginx:/etc/nginx/conf.d
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    container_name: sport_shop_nginx
    ports:
      - 80:80
      - 443:443
    restart: always

  certbot:

    image: certbot/certbot
    container_name: sport_shop_certbot
    env_file:
      - env/main.env
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf:/etc/letsencrypt
    command: certonly --webroot -w /var/www/certbot --force-renewal --email dramatic225@gmail.com -d quicksmart.pro --agree-tos

  rabbitmq:

    image: rabbitmq
    container_name: sport_shop_rabbitmq
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    restart: always

  celery:

    build: ..
    entrypoint: /celery.sh
    depends_on:
      - postgres
      - rabbitmq
    volumes:
      - sport_shop_volume:/sportShop
    env_file:
      - env/main.env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    user: sport_shop_user:sport_shop_group
    container_name: sport_shop_celery
    network_mode: service:open_vpn_client_api
    restart: always

  celery-beat:

    build: ..
    entrypoint: /celery-beat.sh
    depends_on:
      - postgres
      - rabbitmq
    volumes:
      - sport_shop_volume:/sportShop
    env_file:
      - env/main.env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    user: sport_shop_user:sport_shop_group
    container_name: sport_shop_celery_beat
    restart: always

volumes:
  postgres_data:
  sport_shop_volume:
  nginx_log_volume:
  nginx_conf:
  rabbitmq_data:

networks:
  open_vpn_network_api:
    driver: bridge
    name: open_vpn_network_api
